{"is_source_file": true, "format": "Python (Django URLs configuration)", "description": "This file defines URL patterns for a Django REST Framework-based API, including registration of viewsets and individual views for authentication, user info, and health check endpoints.", "external_files": ["django.urls", "rest_framework.routers.DefaultRouter", ".views"], "external_methods": ["path", "include", "DefaultRouter", "health", "RegisterView.as_view", "LoginView.as_view", "LogoutView.as_view", "UserView.as_view", "NoteViewSet"], "published": [], "classes": [{"name": "DefaultRouter", "description": "Router for registering viewsets and generating URL patterns."}], "methods": [{"name": "register", "description": "Registers a viewset with the router with a specific basename."}, {"name": "as_view", "description": "Converts class-based views into callable view functions for URL routing."}], "calls": ["path", "include", "router.register", "health", "RegisterView.as_view", "LoginView.as_view", "LogoutView.as_view", "UserView.as_view"], "search-terms": ["URL patterns", "Django REST Framework", "viewset registration", "auth endpoints", "health check endpoint"], "state": 2, "file_id": 7, "knowledge_revision": 42, "git_revision": "2596a6fee3fdad567224c7a5b9f8829076b8130b", "revision_history": [{"21": "72913c94521de83e5747b47b705045c8201aede8"}, {"42": "2596a6fee3fdad567224c7a5b9f8829076b8130b"}], "ctags": [{"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/note-management-system-15757-15775/notes_backend/api/urls.py", "pattern": "/^router = DefaultRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "urlpatterns", "path": "/home/kavia/workspace/code-generation/note-management-system-15757-15775/notes_backend/api/urls.py", "pattern": "/^urlpatterns = [$/", "language": "Python", "kind": "variable"}], "hash": "471827df20837e853addc7c20d19b6a7", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/api/urls.py", "fields": [{"name": "router = DefaultRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "urlpatterns = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}